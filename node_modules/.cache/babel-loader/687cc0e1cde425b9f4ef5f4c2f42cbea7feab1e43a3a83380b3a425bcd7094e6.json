{"ast":null,"code":"var _jsxFileName = \"D:\\\\BACKUP GOULART\\\\AREA DE TRABALHO\\\\PASTAS\\\\PROGRAMA\\xC7\\xC3O\\\\ONE BIT CODE\\\\AULAS\\\\PROJETOS\\\\TO DO LIST (YOUTUBE)\\\\to-do-list\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport { useState, useEffect } from 'react';\nimport { BsTrash, BsBookmarkCheck, BsBookmarkCheckFill } from \"react-icons/bs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API = \"http://localhost:5000\";\nfunction App() {\n  _s();\n  const [title, setTitle] = useState('');\n  const [time, setTime] = useState('');\n  const [todos, setTodos] = useState([]);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    const loadData = async () => {\n      setLoading(true);\n      const res = await fetch(API + \"/todos\").then(res => res.json()).then(data => data);\n\n      //Primeiro guardamos os valores da API em 'res'\n      //Depois transformamos esses dados em JSON\n      //Depois pegamos essa resposta, transformamos na variavel data e retornamos 'data'\n\n      setLoading(false);\n      //Ja carregados os dados, pode retornar o loading para inativo\n\n      setTodos(res);\n      //'todos' atualizado para os dados adicionados recentemente em 'res'\n    };\n  }, []);\n  //[] acima responsável para executar o comando quando a pagina carrega \n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const todo = {\n      id: Math.random(),\n      title,\n      time,\n      done: false\n    };\n    await fetch(API + \"/todos\", {\n      method: \"POST\",\n      //Inserindo dados\n\n      body: JSON.stringify(todo),\n      //receber dados como string\n\n      headers: {\n        \"content-type\": \"application/json\"\n      }\n    });\n    setTodos(prevState => [...prevState, todo]);\n    //'prevState' = Estado anterior \n    //Função visa adicionar um item ao estado anterior e gerar um novo estado\n\n    setTitle('');\n    setTime('');\n  };\n  const handleDelete = async id => {\n    await fetch(API + \"/todos/\" + id, {\n      method: \"DELETE\"\n    });\n    setTodos(prevState => prevState.filter(todo => todo.id !== id));\n  };\n  const handleEdit = async todo => {\n    todo.done = !todo.done;\n    const data = await fetch(API + \"/todos/\" + todo.id, {\n      method: \"PUT\",\n      body: JSON.stringify(todo),\n      headers: {\n        \"content-type\": \"application/json\"\n      }\n    });\n    setTodos(prevState => prevState.map(t => t.id === data.id ? t = data : t));\n    //Se o id de 't' for igual ao id do data, vou atualizar todo o objeto pelo o que veio do backEnd\n    //Caso nao, mantem 't' mesmo\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"React To Do List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-todo\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Insira sua pr\\xF3xima tarefa:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-control\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"title\",\n            children: \" Tarefa:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"title\",\n            placeholder: \"Titulo da tarefa\",\n            onChange: e => setTitle(e.target.value),\n            value: title || \"\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-control\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"time\",\n            children: \" Dura\\xE7\\xE3o:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"time\",\n            placeholder: \"Tempo estimado (horas)\",\n            onChange: e => setTime(e.target.value),\n            value: time || \"\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Criar Tarefa\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-todo\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Lista de tarefas: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), todos.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"N\\xE3o h\\xE1 tarefas!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 32\n      }, this), todos.map(todo => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todo\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: todo.done ? 'todo-done' : '',\n          children: todo.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Dura\\xE7\\xE3o: \", todo.time, \" horas\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            onClick: () => handleEdit(todo),\n            children: !todo.done ? /*#__PURE__*/_jsxDEV(BsBookmarkCheck, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 69\n            }, this) : /*#__PURE__*/_jsxDEV(BsBookmarkCheckFill, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 90\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(BsTrash, {\n            onClick: () => handleDelete(todo.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 13\n        }, this)]\n      }, todo.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ujpjXrL9DTr4dri6ggPJ3RG1W5I=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","BsTrash","BsBookmarkCheck","BsBookmarkCheckFill","jsxDEV","_jsxDEV","API","App","_s","title","setTitle","time","setTime","todos","setTodos","loading","setLoading","loadData","res","fetch","then","json","data","handleSubmit","e","preventDefault","todo","id","Math","random","done","method","body","JSON","stringify","headers","prevState","handleDelete","filter","handleEdit","map","t","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","name","placeholder","onChange","target","value","required","length","onClick","_c","$RefreshReg$"],"sources":["D:/BACKUP GOULART/AREA DE TRABALHO/PASTAS/PROGRAMAÇÃO/ONE BIT CODE/AULAS/PROJETOS/TO DO LIST (YOUTUBE)/to-do-list/src/App.js"],"sourcesContent":["import './App.css';\nimport { useState, useEffect } from 'react';\nimport { BsTrash, BsBookmarkCheck, BsBookmarkCheckFill } from \"react-icons/bs\"\n\n\nconst API = \"http://localhost:5000\"\n\n\nfunction App() {\n\n  const [title, setTitle] = useState('')\n  const [time, setTime] = useState('')\n  const [todos, setTodos] = useState([])\n  const [loading, setLoading] = useState(false)\n\n\n  useEffect(() => {\n\n    const loadData = async () => {\n\n      setLoading(true)\n\n      const res = await fetch(API + \"/todos\")\n      .then((res) => res.json())\n      .then((data) => data )\n\n      //Primeiro guardamos os valores da API em 'res'\n      //Depois transformamos esses dados em JSON\n      //Depois pegamos essa resposta, transformamos na variavel data e retornamos 'data'\n\n      setLoading(false)\n      //Ja carregados os dados, pode retornar o loading para inativo\n\n      setTodos(res)\n      //'todos' atualizado para os dados adicionados recentemente em 'res'\n\n    }\n\n    \n\n  }, []) \n  //[] acima responsável para executar o comando quando a pagina carrega \n\n\n\n  const handleSubmit = async (e) => {\n\n    e.preventDefault()\n\n    const todo = {\n\n      id: Math.random(),\n      title,\n      time,\n      done: false\n\n    }\n\n    await fetch(API + \"/todos\", {\n      \n      method: \"POST\",\n      //Inserindo dados\n\n      body: JSON.stringify(todo),\n      //receber dados como string\n\n      headers: {\n        \"content-type\": \"application/json\"\n      }\n\n    })\n\n\n    setTodos((prevState) => [...prevState, todo])\n    //'prevState' = Estado anterior \n    //Função visa adicionar um item ao estado anterior e gerar um novo estado\n\n\n    setTitle('')\n    setTime('')\n\n  }\n\n\n  const handleDelete = async (id) => {\n\n    await fetch(API + \"/todos/\" + id , {\n      \n      method: \"DELETE\",\n\n    })\n\n    setTodos((prevState) => prevState.filter((todo) => todo.id !== id))\n    \n  }\n\n\n  const handleEdit = async (todo) => {\n\n    todo.done = !todo.done\n\n    const data = await fetch(API + \"/todos/\" + todo.id , {\n      \n      method: \"PUT\",\n      body: JSON.stringify(todo),\n      headers: {\n        \"content-type\": \"application/json\"\n      }\n\n    })\n\n    setTodos((prevState) => prevState.map((t) => (t.id === data.id) ? (t = data) : t))\n    //Se o id de 't' for igual ao id do data, vou atualizar todo o objeto pelo o que veio do backEnd\n    //Caso nao, mantem 't' mesmo\n\n\n  }\n\n\n  return (\n\n    <div className='app'>\n\n      <div className='todo-header'>\n        <h1>React To Do List</h1>\n      </div>\n\n      <div className='form-todo'>\n        <h2>Insira sua próxima tarefa:</h2>\n        <form onSubmit={handleSubmit} >\n\n          <div className='form-control'>\n\n            <label htmlFor='title'> Tarefa:</label>\n            <br />\n            <input\n              type='text'\n              name='title'\n              placeholder='Titulo da tarefa'\n              onChange={(e) => setTitle(e.target.value)}\n              value={title || \"\"}\n              required\n            />\n          </div>\n\n          <div className='form-control'>\n            <label htmlFor='time'> Duração:</label>\n            <br />\n            <input\n              type='text'\n              name='time'\n              placeholder='Tempo estimado (horas)'\n              onChange={(e) => setTime(e.target.value)}\n              value={time || \"\"}\n              required\n            />\n          </div>\n\n          <input type='submit' value='Criar Tarefa' />\n\n        </form>\n      </div>\n\n      <div className='list-todo'>\n        <h2>Lista de tarefas: </h2>\n        {todos.length === 0 && <p>Não há tarefas!</p>}\n        {todos.map((todo) => (\n          <div className='todo' key={todo.id}>\n            <h3 className={todo.done ? 'todo-done' : '' } >{todo.title}</h3>\n            <p>Duração: {todo.time} horas</p>\n            <div className='actions'>\n              <span onClick={() => handleEdit(todo)} >{!todo.done ? <BsBookmarkCheck/> : <BsBookmarkCheckFill/>}</span>\n              <BsTrash onClick={() => handleDelete(todo.id)}/>\n              <hr/>\n            </div>\n          </div>\n        ))}\n      </div>\n\n    </div>\n\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}